{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Amoolya Suneja\\\\Desktop\\\\AI-Liveboard\\\\client\\\\src\\\\components\\\\whiteboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport { Stage, Layer, Line, Circle, Rect } from 'react-konva';\nimport { SHAPES } from '../../shared/constants';\nimport useDrawing from '../hooks/useDrawing';\nimport { SocketContext } from '../context/SocketContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Whiteboard = ({\n  roomId,\n  users\n}) => {\n  _s();\n  const socket = React.useContext(SocketContext);\n  const stageRef = useRef(null);\n  const {\n    elements,\n    setElements,\n    isDrawing,\n    handleDrawStart,\n    handleDrawMove,\n    handleDrawEnd\n  } = useDrawing(socket, roomId);\n\n  // Socket listeners\n  useEffect(() => {\n    const handleRemoteDrawStart = element => {\n      setElements(prev => [...prev, element]);\n    };\n    const handleRemoteDrawMove = point => {\n      setElements(prev => {\n        const lastIndex = prev.length - 1;\n        const updated = [...prev];\n        updated[lastIndex] = {\n          ...updated[lastIndex],\n          points: [...updated[lastIndex].points, point]\n        };\n        return updated;\n      });\n    };\n    const handleShapeRecognized = shape => {\n      setElements(prev => [...prev.filter(el => !el.temp), {\n        ...shape,\n        id: Date.now()\n      }]);\n    };\n    socket.on(EVENTS.DRAW_START, handleRemoteDrawStart);\n    socket.on(EVENTS.DRAW_MOVE, handleRemoteDrawMove);\n    socket.on(EVENTS.SHAPE_RECOGNIZED, handleShapeRecognized);\n    return () => {\n      socket.off(EVENTS.DRAW_START, handleRemoteDrawStart);\n      socket.off(EVENTS.DRAW_MOVE, handleRemoteDrawMove);\n      socket.off(EVENTS.SHAPE_RECOGNIZED, handleShapeRecognized);\n    };\n  }, [setElements, socket]);\n\n  // Handle drawing events\n  const handleMouseDown = e => {\n    const pos = e.target.getStage().getPointerPosition();\n    handleDrawStart(pos.x, pos.y);\n  };\n  const handleMouseMove = e => {\n    if (!isDrawing) return;\n    const pos = e.target.getStage().getPointerPosition();\n    handleDrawMove(pos.x, pos.y);\n  };\n  const handleMouseUp = () => {\n    if (!isDrawing) return;\n    handleDrawEnd();\n\n    // Get last drawn element\n    const lastElement = elements[elements.length - 1];\n    if (lastElement.type === SHAPES.FREEHAND) {\n      const recognized = recognizeShape(lastElement.points);\n      if (recognized) {\n        socket.emit(EVENTS.SHAPE_RECOGNIZED, {\n          roomId,\n          shape: recognized\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteboard\",\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: window.innerWidth - 300,\n      height: window.innerHeight - 100,\n      onMouseDown: handleMouseDown,\n      onMousemove: handleMouseMove,\n      onMouseup: handleMouseUp,\n      ref: stageRef,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: elements.map(element => {\n          if (element.type === SHAPES.FREEHAND) {\n            return /*#__PURE__*/_jsxDEV(Line, {\n              points: element.points.flat(),\n              stroke: \"#000\",\n              strokeWidth: 5,\n              tension: 0.5,\n              lineCap: \"round\",\n              lineJoin: \"round\"\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 17\n            }, this);\n          }\n          if (element.type === SHAPES.CIRCLE) {\n            return /*#__PURE__*/_jsxDEV(Circle, {\n              x: element.x + element.radius,\n              y: element.y + element.radius,\n              radius: element.radius,\n              stroke: \"#000\",\n              strokeWidth: 3\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this);\n          }\n          if (element.type === SHAPES.RECTANGLE) {\n            return /*#__PURE__*/_jsxDEV(Rect, {\n              x: element.x,\n              y: element.y,\n              width: element.width,\n              height: element.height,\n              stroke: \"#000\",\n              strokeWidth: 3\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(Whiteboard, \"Snba7QfN+WOHf7wvPtlC3vp/bmU=\", false, function () {\n  return [useDrawing];\n});\n_c = Whiteboard;\nexport default Whiteboard;\nvar _c;\n$RefreshReg$(_c, \"Whiteboard\");","map":{"version":3,"names":["React","useRef","useEffect","Stage","Layer","Line","Circle","Rect","SHAPES","useDrawing","SocketContext","jsxDEV","_jsxDEV","Whiteboard","roomId","users","_s","socket","useContext","stageRef","elements","setElements","isDrawing","handleDrawStart","handleDrawMove","handleDrawEnd","handleRemoteDrawStart","element","prev","handleRemoteDrawMove","point","lastIndex","length","updated","points","handleShapeRecognized","shape","filter","el","temp","id","Date","now","on","EVENTS","DRAW_START","DRAW_MOVE","SHAPE_RECOGNIZED","off","handleMouseDown","e","pos","target","getStage","getPointerPosition","x","y","handleMouseMove","handleMouseUp","lastElement","type","FREEHAND","recognized","recognizeShape","emit","className","children","width","window","innerWidth","height","innerHeight","onMouseDown","onMousemove","onMouseup","ref","map","flat","stroke","strokeWidth","tension","lineCap","lineJoin","fileName","_jsxFileName","lineNumber","columnNumber","CIRCLE","radius","RECTANGLE","_c","$RefreshReg$"],"sources":["C:/Users/Amoolya Suneja/Desktop/AI-Liveboard/client/src/components/whiteboard.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport { Stage, Layer, Line, Circle, Rect } from 'react-konva';\r\nimport { SHAPES } from '../../shared/constants';\r\nimport useDrawing from '../hooks/useDrawing';\r\nimport { SocketContext } from '../context/SocketContext';\r\n\r\nconst Whiteboard = ({ roomId, users }) => {\r\n  const socket = React.useContext(SocketContext);\r\n  const stageRef = useRef(null);\r\n  const {\r\n    elements,\r\n    setElements,\r\n    isDrawing,\r\n    handleDrawStart,\r\n    handleDrawMove,\r\n    handleDrawEnd\r\n  } = useDrawing(socket, roomId);\r\n\r\n  // Socket listeners\r\n  useEffect(() => {\r\n    const handleRemoteDrawStart = (element) => {\r\n      setElements(prev => [...prev, element]);\r\n    };\r\n\r\n    const handleRemoteDrawMove = (point) => {\r\n      setElements(prev => {\r\n        const lastIndex = prev.length - 1;\r\n        const updated = [...prev];\r\n        updated[lastIndex] = {\r\n          ...updated[lastIndex],\r\n          points: [...updated[lastIndex].points, point]\r\n        };\r\n        return updated;\r\n      });\r\n    };\r\n\r\n    const handleShapeRecognized = (shape) => {\r\n      setElements(prev => [\r\n        ...prev.filter(el => !el.temp),\r\n        { ...shape, id: Date.now() }\r\n      ]);\r\n    };\r\n\r\n    socket.on(EVENTS.DRAW_START, handleRemoteDrawStart);\r\n    socket.on(EVENTS.DRAW_MOVE, handleRemoteDrawMove);\r\n    socket.on(EVENTS.SHAPE_RECOGNIZED, handleShapeRecognized);\r\n\r\n    return () => {\r\n      socket.off(EVENTS.DRAW_START, handleRemoteDrawStart);\r\n      socket.off(EVENTS.DRAW_MOVE, handleRemoteDrawMove);\r\n      socket.off(EVENTS.SHAPE_RECOGNIZED, handleShapeRecognized);\r\n    };\r\n  }, [setElements, socket]);\r\n\r\n  // Handle drawing events\r\n  const handleMouseDown = (e) => {\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    handleDrawStart(pos.x, pos.y);\r\n  };\r\n\r\n  const handleMouseMove = (e) => {\r\n    if (!isDrawing) return;\r\n    const pos = e.target.getStage().getPointerPosition();\r\n    handleDrawMove(pos.x, pos.y);\r\n  };\r\n\r\n  const handleMouseUp = () => {\r\n    if (!isDrawing) return;\r\n    handleDrawEnd();\r\n    \r\n    // Get last drawn element\r\n    const lastElement = elements[elements.length - 1];\r\n    if (lastElement.type === SHAPES.FREEHAND) {\r\n      const recognized = recognizeShape(lastElement.points);\r\n      if (recognized) {\r\n        socket.emit(EVENTS.SHAPE_RECOGNIZED, {\r\n          roomId,\r\n          shape: recognized\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"whiteboard\">\r\n      <Stage\r\n        width={window.innerWidth - 300}\r\n        height={window.innerHeight - 100}\r\n        onMouseDown={handleMouseDown}\r\n        onMousemove={handleMouseMove}\r\n        onMouseup={handleMouseUp}\r\n        ref={stageRef}\r\n      >\r\n        <Layer>\r\n          {elements.map((element) => {\r\n            if (element.type === SHAPES.FREEHAND) {\r\n              return (\r\n                <Line\r\n                  key={element.id}\r\n                  points={element.points.flat()}\r\n                  stroke=\"#000\"\r\n                  strokeWidth={5}\r\n                  tension={0.5}\r\n                  lineCap=\"round\"\r\n                  lineJoin=\"round\"\r\n                />\r\n              );\r\n            }\r\n            if (element.type === SHAPES.CIRCLE) {\r\n              return (\r\n                <Circle\r\n                  key={element.id}\r\n                  x={element.x + element.radius}\r\n                  y={element.y + element.radius}\r\n                  radius={element.radius}\r\n                  stroke=\"#000\"\r\n                  strokeWidth={3}\r\n                />\r\n              );\r\n            }\r\n            if (element.type === SHAPES.RECTANGLE) {\r\n              return (\r\n                <Rect\r\n                  key={element.id}\r\n                  x={element.x}\r\n                  y={element.y}\r\n                  width={element.width}\r\n                  height={element.height}\r\n                  stroke=\"#000\"\r\n                  strokeWidth={3}\r\n                />\r\n              );\r\n            }\r\n            return null;\r\n          })}\r\n        </Layer>\r\n      </Stage>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Whiteboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}